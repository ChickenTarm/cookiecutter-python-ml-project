stages:
  - Python Formatting and Linter Checks
  - Tests
  - History Copy
  - Generate Report
  - Report

variables:
  CONFIG_FILE_PATH: src/chunker/config/cloud_run.yaml
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  DEBIAN_FRONTEND: noninteractive
  #Chunker:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_IMAGE: us-central1-docker.pkg.dev/percepta-ops/chunker/chunker:${CI_COMMIT_REF_SLUG}

cache:
  key:
    files:
      - poetry.lock
      - .gitlab-ci.yml
    prefix: ${CI_JOB_NAME}
  paths:
    - .venv
    - .cache/pip

pyright:
  stage: Python Formatting and Linter Checks
  image: python:3.10
  before_script:
    - python --version
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - poetry config virtualenvs.create false
    - poetry install
  script:
    - poetry run pyright

flake8:
  stage: Python Formatting and Linter Checks
  image: python:3.10
  before_script:
    - python --version
    - pip install flake8
  script:
    - flake8 --config dev_configurations/.flake8 .

black:
  stage: Python Formatting and Linter Checks
  image: python:3.10
  before_script:
    - python --version
    - pip install black
  script:
    - black --fast .

isort:
  stage: Python Formatting and Linter Checks
  image: python:3.10
  before_script:
    - python --version
    - pip install isort
  script:
    - isort . --check --diff --verbose

tests:
  stage: Tests
  needs: [flake8, black, isort]
  artifacts:
    when: always
    paths:
      - allure_results
    expire_in: 1 day
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  image: python:3.10
  before_script:
    - python --version
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install
  script:
    - coverage run --branch --concurrency=multiprocessing,thread --parallel -m pytest -v --junitxml=report.xml --alluredir=allure_results
    - coverage report
    - coverage xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  allow_failure: true

history_copy:
  stage: History Copy
  image: python:3.9
  artifacts:
    when: always
    paths:
      - allure_results
    expire_in: 1 day
  script:
    - curl --location --output artifacts.zip "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/jobs/artifacts/main/download?job=pages&job_token=$CI_JOB_TOKEN"
    - unzip artifacts.zip
    - chmod -R 777 public
    - cp ./public/history/* ./allure_results
  allow_failure: true

generate_report:
  stage: Generate Report
  artifacts:
    paths:
      - ./allure-results
      - ./allure-report
    expire_in: 1 day
  image: frankescobar/allure-docker-service
  script:
    - allure generate -c allure_results -o allure-report
  rules:
    - when: always

pages:
  stage: Report
  script:
    - mkdir public
    - cp -r ./allure-report/* public
  artifacts:
    paths:
      - public
    expire_in: never
  needs:
    - job: generate_report
