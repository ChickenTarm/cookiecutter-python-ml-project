[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.friendly_name}}"
authors = ["{{cookiecutter.author}} <{{cookiecutter.email}}>"]
readme = "README.md"
homepage = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}"
repository = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}"
documentation = "https://{{cookiecutter.project_name}}.readthedocs.io"
{% if cookiecutter.package_name != cookiecutter.project_name.replace('-', '_') -%}
packages = [
    { include = "{{cookiecutter.package_name}}", from = "src" },
]
{% endif -%}
classifiers = [
    "{{cookiecutter.development_status}}",
]

[tool.poetry.urls]
Changelog = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}/releases"

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
click = "^8.1.3"

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
flake8 = "^5.0.4"
flake8-bandit = "^4.1.1"
flake8-bugbear = "^22.10.27"
flake8-docstrings = "^1.6.0"
flake8-rst-docstrings = "^0.2.7"
isort = "^5.10.1"
pygments = "^2.13.0"
pyright = "^1.1.278"
pre-commit = "^2.20.0"
nox = "^2022.8.7"
nox-poetry = "^1.0.2"
pep8-naming = "^0.13.2"

[tool.poetry.group.test.dependencies]
pytest = "^7.2.0"
allure-pytest = "^2.11.1"
coverage = {extras = ["toml"], version = "^6.5.0"}
xdoctest = "^1.1.0"
typeguard = "^2.13.3"
safety = "^2.3.1"

[tool.poetry.group.docs.dependencies]
sphinx = "^5.3.0"
sphinx-autobuild = "^2021.3.14"
sphinx-click = "^4.3.0"
furo = "^2022.9.29"

[tool.poetry.scripts]
{{cookiecutter.project_name}} = "{{cookiecutter.package_name}}.__main__:main"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.package_name}}", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.black]
line-length = 120
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 120
include_trailing_comma=true

[tool.pyright]
include = ["."]

typeCheckingMode = "basic"
useLibraryCodeForTypes = true
pythonPlatform = "Linux"
pythonVersion = "3.10"
verboseOutput = true

reportMissingImports = true
reportMissingTypeStubs = false
reportGeneralTypeIssues = "warning"
reportPrivateImportUsage = "none"
reportUnboundVariable = "warning"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
